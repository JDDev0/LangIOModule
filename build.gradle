plugins {
    id 'java'
}

group 'me.jddev0.lang.module.io'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'at.jddev0.lang:lang-interpreter:1.0.0-beta-07'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

String moduleJarBaseName = 'Module.jar'

task cleanLangModuleBuild() {
    delete layout.buildDirectory.dir('tmp/langmodule')
}

task buildNativeCode(type: Jar) {
    archiveFileName = moduleJarBaseName

    destinationDirectory = layout.buildDirectory.dir('tmp/langmodule/native')
    with jar
}

task copyLangModuleFiles(type: Copy) {
    from 'src/main/langmodule'

    into layout.buildDirectory.dir('tmp/langmodule')
}

task prepareLangModuleFiles() {
    dependsOn cleanLangModuleBuild, buildNativeCode, copyLangModuleFiles
}

task buildLangModule(type: Zip, dependsOn: prepareLangModuleFiles) {
    from layout.buildDirectory.dir('tmp/langmodule')

    archiveName 'module.lm'
    destinationDir layout.buildDirectory.dir('libs').get().asFile
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_17
}